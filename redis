redis
1.redis 概述
Redis (Remote Dictionary Server),即远程字典服务

是一个开源的使用ANSI c 语言编写、支持网络、可基于内存亦可以持久化的日志型、Key-Value数据库，并且提供多语言的API。免费的开源。是当前最热门的的NoSQL技术之一。
也被人们称之为结构化数据库。
redis 会周期的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave（主从）同步。
免费和开源！

Redis 能干什么
   1.内存存储、持久化，内存中是断电即失、所以说持久化很重要（rdb,aof）
   2.效率高，可以用于高速缓存
   3.发布订阅系统
   4.地图信息分析
   5.计时器，计数器（浏览量）

Redis的特性
   1.多样的数据类型
   2.持久化
   3.集群
   4.事务

2.安装
  2.1 windows 安装
    1.下载安装包
      https://github.com/dmajkic/redis/downloads
    2.解压到自己电脑上的环境目录

  2.2 Linux 安装
    https://www.cnblogs.com/hunanzp/p/12304622.html
3.redis 基础知识
  1.redis默认有16个数据库，模式使用的是第0个
    可以使用select 进行切换数据库
  2.清空当前数据库
    flushdb
  3.清空所有数据库内容
    flushall
  4.查看所有的key
    keys *
  5.redis 是单线程的
    redis是很快的，官方表示，Redis 是基于内存操作的，CPU 并不是性能瓶颈，redis 的瓶颈是根据机器的内存和网络带宽，既然可以使用单线程来实现，就是用单线程了。
    redis 是使用c语言写的，官方提供数据为 1000+ 的QPS ，完全不比同样使用key-value 的Memecache 差。

    Redis 为什么单线程还那么快？
    1.误区1： 高性能的服务器一定是多线程的
    2.误区2： 多线程（CPU上下文会切换）一定比单线程效率高

    核心:
    redis 是将所有的数据全部存在内存中的，所以说使用单线程去操作效率就是最高的，多线程（CPU上下文会切换：耗时的操作），对于内存系统来说， 如果没有上下文就是最高的，
    多次读写都是在一个CPU上的，在内存情况下，这就是最佳的方案。

4.redis-key
    1. keys * : 查看所有的key
    2. exists keyname : 判断当前的key 是否存在
    3. move keyname : 移除当前的key
    4. expire keyname : 设置key的过期时间
    5. ttl keyname : 查看当前key 的剩余时间
    6. type keyname : 查看当前key 对应value 的类型

5.String (字符串)
    省略简单的get和set 等操作
    1.自增1 : incr views

    2.自减1 : decr views

            127.0.0.1:6379> set views 0
            OK
            127.0.0.1:6379> incr views
            (integer) 1
            127.0.0.1:6379> get views
            "1"
            127.0.0.1:6379> incr views
            (integer) 2
            127.0.0.1:6379> decr views
            (integer) 1
            127.0.0.1:6379> get views
            "1"
            127.0.0.1:6379>
    3.自增步长 :incrby views 10
    4.自减步长 :decrby views 10

    5.字符串范围
      1.截取字符串: GETRANGE keyname 0 3
            127.0.0.1:6379> set name 'fanxuebing'
            OK
            127.0.0.1:6379> getrange name 0 3
            "fanx"
      2.替换指定为止开始的字符串: SETRANGE keyname 1 xx
            127.0.0.1:6379> setrange name 3 haha
            (integer) 10
            127.0.0.1:6379> get name
            "fanhahaing"

      3.设置过期时间 setex （set with expire）
      4.当不存在时设置 setnx (set if not exist)
            127.0.0.1:6379> setnx version 1.0.0
            (integer) 1
            127.0.0.1:6379> setnx version 1.0.0
            (integer) 0
            127.0.0.1:6379> get version
            "1.0.0"
      5.批量设置值
            127.0.0.1:6379> mset k1 v1 k2 v2 k3 v3
            OK
            127.0.0.1:6379> keys *
            1) "k2"
            2) "k3"
            3) "k1"
            127.0.0.1:6379> mget k1 k2 k3
            1) "v1"
            2) "v2"
            3) "v3"
      6.先获取在设置 : getset ，如果不存在值，则返回nil ,如果存在值，则获取原来的值，并设置新的值
            127.0.0.1:6379> getset db redis
            (nil)
            127.0.0.1:6379> get db
            "redis"
            127.0.0.1:6379> getset db mongodb
            "redis"

      总结：
      String 类型使用场景： value 除了可以是字符串还可以是数字
           1.计数器
           2.统计多单位的数量
           3.粉丝数
           4.对象缓存存储